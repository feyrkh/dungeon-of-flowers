[gd_scene load_steps=8 format=2]

[ext_resource path="res://art_exports/ui_dialog/ui_speechbubble_texture.png" type="Texture" id=1]
[ext_resource path="res://art_exports/ui_dialog/ui_speechbubble_mask.png" type="Texture" id=2]
[ext_resource path="res://art_exports/ui_dialog/ui_speechbubble.png" type="Texture" id=3]
[ext_resource path="res://dialogic/RandomSpeechBubble.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D mask;

uniform vec4 start_color : hint_color = vec4(0, 0, 0, 0);
uniform float start_color_width = 0.1;
uniform vec4 fade_color_1 : hint_color = vec4(0, 0, 0, 1);
uniform float fade_color_1_width = 0.2;
uniform vec4 fade_color_2 : hint_color = vec4(1, 1, 0.35, 1);
uniform float fade_color_2_width = 0.3;
uniform vec4 fade_color_3 : hint_color = vec4(1, 1, 1, 1);
uniform float fade_color_3_width = 0.4;

uniform float duration = 0.25;
uniform float progress = 1.0;

void fragment() {
	float _mask_progress = progress * (1.0+fade_color_3_width);
	vec4 in_color = texture(TEXTURE, UV);
	float sample = texture(mask, UV).r;
	if (_mask_progress < sample+start_color_width) {                                                                                       
		COLOR = start_color;
		COLOR.a *= in_color.a;
	} else {
		if (_mask_progress < sample+fade_color_1_width) {
			COLOR = fade_color_1;
			COLOR.a *= in_color.a;
		} else {
			if (_mask_progress < sample+fade_color_2_width) {
				COLOR = fade_color_2;
				COLOR.a *= in_color.a;
			}  else {
				if (_mask_progress < sample+fade_color_3_width) {
					COLOR = fade_color_3;
					COLOR.a *= in_color.a;
				}  else {
					COLOR = in_color;
				}
			}
		}
	}
		//if (_mask_progress <= sample+fade_color_1_width) {    
		//	COLOR = fade_color_1;
			//COLOR.a *= in_color.a;
		//}
	/*
	else if (_mask_progress <= sample+fade_color_2_width) {    
		COLOR = fade_color_2;
		//COLOR.a *= in_color.a;
		return;
	}
	else if (_mask_progress <= sample+fade_color_3_width) {    
		COLOR = fade_color_3;
		//COLOR.a *= in_color.a;
		return;
	}*/
}"

[sub_resource type="StreamTexture" id=2]
load_path = "res://.import/ui_speechbubble_transition_mask.png-927e06095b14016ff10990964df08330.stex"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 1 )
shader_param/start_color = Color( 0, 0, 0, 0 )
shader_param/start_color_width = 0.1
shader_param/fade_color_1 = Color( 0, 0, 0, 1 )
shader_param/fade_color_1_width = 0.2
shader_param/fade_color_2 = Color( 1, 1, 0.35, 1 )
shader_param/fade_color_2_width = 0.3
shader_param/fade_color_3 = Color( 1, 1, 1, 1 )
shader_param/fade_color_3_width = 0.4
shader_param/duration = 0.25
shader_param/progress = 1.02895
shader_param/mask = SubResource( 2 )

[node name="PaperBubble" type="MarginContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1204.0
margin_bottom = -758.0
rect_min_size = Vector2( 716, 322 )
rect_pivot_offset = Vector2( 358, 0 )
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
allow_flip_h = false
allow_flip_v = false

[node name="PaperMoveTimer" type="Timer" parent="."]
wait_time = 0.3
autostart = true

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 716.0
margin_bottom = 322.0

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 716, 322 )
own_world = true
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Container" type="Node2D" parent="ViewportContainer/Viewport"]

[node name="ui_speechbubble" type="Sprite" parent="ViewportContainer/Viewport/Container"]
light_mask = 0
material = SubResource( 3 )
position = Vector2( 362, 167 )
texture = ExtResource( 3 )

[node name="TextureOverlay" type="Sprite" parent="ViewportContainer/Viewport/Container"]
modulate = Color( 1, 1, 1, 0.780392 )
light_mask = 16
position = Vector2( 366, 165 )
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0, 0, 700, 300 )

[node name="Light2D" type="Light2D" parent="ViewportContainer/Viewport/Container"]
light_mask = 0
position = Vector2( 362, 166 )
texture = ExtResource( 2 )
mode = 3
range_item_cull_mask = 16
shadow_item_cull_mask = 0

[connection signal="timeout" from="PaperMoveTimer" to="." method="_on_Timer_timeout"]
